{"ast":null,"code":"const BASE_URL = 'https://www.random.org/integers/?num=1&min=1&max=10&col=1&base=10&format=plain&rnd=new';\nexport async function getNumber() {\n  let request = await fetch(BASE_URL);\n  return request.text();\n}\n\n(async function compare() {\n  let number1 = parseInt(await getNumber());\n  let number2 = parseInt(await getNumber());\n\n  if (number1 % 2 === 0 && number2 % 2 === 0) {\n    console.log('success\\n', number1, number2);\n    return true;\n  } else {\n    console.log('error');\n    await compare();\n  }\n});","map":{"version":3,"names":["BASE_URL","getNumber","request","fetch","text","compare","number1","parseInt","number2","console","log"],"sources":["/Users/romanlipatov/Documents/gravity/test/src/api.ts"],"sourcesContent":["\nconst BASE_URL = 'https://www.random.org/integers/?num=1&min=1&max=10&col=1&base=10&format=plain&rnd=new';\n\n\nexport async function getNumber() {\n  let request = await fetch(BASE_URL);\n  return request.text()\n}\n\n(async function compare() {\n  let number1 = parseInt(await getNumber());\n  let number2 = parseInt (await getNumber());\n\n  if ((number1 % 2 === 0) && (number2 % 2 === 0)) {\n    console.log('success\\n', number1, number2);\n    return true;\n    } else {\n    console.log('error');\n    await compare();\n  }\n})\n"],"mappings":"AACA,MAAMA,QAAQ,GAAG,wFAAjB;AAGA,OAAO,eAAeC,SAAf,GAA2B;EAChC,IAAIC,OAAO,GAAG,MAAMC,KAAK,CAACH,QAAD,CAAzB;EACA,OAAOE,OAAO,CAACE,IAAR,EAAP;AACD;;AAED,CAAC,eAAeC,OAAf,GAAyB;EACxB,IAAIC,OAAO,GAAGC,QAAQ,CAAC,MAAMN,SAAS,EAAhB,CAAtB;EACA,IAAIO,OAAO,GAAGD,QAAQ,CAAE,MAAMN,SAAS,EAAjB,CAAtB;;EAEA,IAAKK,OAAO,GAAG,CAAV,KAAgB,CAAjB,IAAwBE,OAAO,GAAG,CAAV,KAAgB,CAA5C,EAAgD;IAC9CC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,OAAzB,EAAkCE,OAAlC;IACA,OAAO,IAAP;EACC,CAHH,MAGS;IACPC,OAAO,CAACC,GAAR,CAAY,OAAZ;IACA,MAAML,OAAO,EAAb;EACD;AACF,CAXD"},"metadata":{},"sourceType":"module"}